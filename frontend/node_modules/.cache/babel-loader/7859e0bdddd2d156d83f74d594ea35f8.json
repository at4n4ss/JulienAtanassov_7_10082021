{"ast":null,"code":"var _jsxFileName = \"C:\\\\Openclassroom\\\\P7_atanassov_julien\\\\frontend\\\\mon-app\\\\src\\\\components\\\\DisplayComments.js\";\n// Imports\nimport React, { Component } from 'react';\nimport { withRouter } from 'react-router';\nimport Container from 'react-bootstrap/Container';\nimport axios from 'axios';\nimport Card from 'react-bootstrap/Card';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar qs = require('qs');\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3002/api/comment/',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    common: {\n      Authorization: localStorage.getItem('token')\n    }\n  }\n}); // Composant permettant d'afficher les commentaires d'un article\n\nclass DisplayComments extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contents: []\n    };\n\n    this.getContentId = async () => {\n      const contentId = qs.parse(this.props.match.params, {\n        ignoreQueryPrefix: true\n      }).id;\n      const params = new URLSearchParams();\n      params.append('contentId', contentId);\n      let data = await api.post('/', params).then(({\n        data\n      }) => data);\n      this.setState({\n        contents: data\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.getContentId();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        id: \"boxContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contentContainer\",\n          children: this.state.contents.map(content => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardElement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n                children: content.User.username\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n                children: /*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: content.contentComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)]\n          }, content.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default _c = withRouter(DisplayComments);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Openclassroom/P7_atanassov_julien/frontend/mon-app/src/components/DisplayComments.js"],"names":["React","Component","withRouter","Container","axios","Card","qs","require","api","create","baseURL","headers","common","Authorization","localStorage","getItem","DisplayComments","state","contents","getContentId","contentId","parse","props","match","params","ignoreQueryPrefix","id","URLSearchParams","append","data","post","then","setState","componentDidMount","render","map","content","User","username","contentComment"],"mappings":";AAAA;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,sBAAjB;;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB;;AACA,MAAMC,GAAG,GAAGJ,KAAK,CAACK,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,oCADc;AAEvBC,EAAAA,OAAO,EAAE;AACP,oBAAgB,mCADT;AAEPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADT;AAFD;AAFc,CAAb,CAAZ,C,CAUA;;AACA,MAAMC,eAAN,SAA8Bf,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACtCgB,KADsC,GAC9B;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAD8B;;AAAA,SAItCC,YAJsC,GAIvB,YAAY;AACzB,YAAMC,SAAS,GAAGd,EAAE,CAACe,KAAH,CAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAA1B,EAAkC;AAClDC,QAAAA,iBAAiB,EAAE;AAD+B,OAAlC,EAEfC,EAFH;AAIA,YAAMF,MAAM,GAAG,IAAIG,eAAJ,EAAf;AACAH,MAAAA,MAAM,CAACI,MAAP,CAAc,WAAd,EAA2BR,SAA3B;AAEA,UAAIS,IAAI,GAAG,MAAMrB,GAAG,CAACsB,IAAJ,CAAS,GAAT,EAAcN,MAAd,EAAsBO,IAAtB,CAA2B,CAAC;AAAEF,QAAAA;AAAF,OAAD,KAAcA,IAAzC,CAAjB;AACA,WAAKG,QAAL,CAAc;AAAEd,QAAAA,QAAQ,EAAEW;AAAZ,OAAd;AACD,KAdqC;AAAA;;AAgBtCI,EAAAA,iBAAiB,GAAG;AAClB,SAAKd,YAAL;AACD;;AACDe,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,6BACE,QAAC,SAAD;AAAW,QAAA,EAAE,EAAC,YAAd;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,kBAAf;AAAA,oBACG,KAAKjB,KAAL,CAAWC,QAAX,CAAoBiB,GAApB,CAAwBC,OAAO,iBAC9B;AAAA,oCACE;AAAK,cAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,IAAD;AAAM,cAAA,SAAS,EAAC,aAAhB;AAAA,sCACE,QAAC,IAAD,CAAM,MAAN;AAAA,0BAAcA,OAAO,CAACC,IAAR,CAAaC;AAA3B;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,IAAN;AAAA,uCACE,QAAC,IAAD,CAAM,IAAN;AAAA,4BAAYF,OAAO,CAACG;AAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA,aAAUH,OAAO,CAACV,EAAlB;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAmBD;;AAvCqC;;AA0CxC,oBAAexB,UAAU,CAACc,eAAD,CAAzB","sourcesContent":["// Imports\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from 'react-router';\r\nimport Container from 'react-bootstrap/Container';\r\nimport axios from 'axios';\r\nimport Card from 'react-bootstrap/Card';\r\nvar qs = require('qs');\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3002/api/comment/',\r\n  headers: {\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n    common: {\r\n      Authorization: localStorage.getItem('token')\r\n    }\r\n  }\r\n});\r\n\r\n// Composant permettant d'afficher les commentaires d'un article\r\nclass DisplayComments extends Component {\r\n  state = {\r\n    contents: []\r\n  };\r\n  getContentId = async () => {\r\n    const contentId = qs.parse(this.props.match.params, {\r\n      ignoreQueryPrefix: true\r\n    }).id;\r\n\r\n    const params = new URLSearchParams();\r\n    params.append('contentId', contentId);\r\n\r\n    let data = await api.post('/', params).then(({ data }) => data);\r\n    this.setState({ contents: data });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getContentId();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container id='boxContent'>\r\n          <div className='contentContainer'>\r\n            {this.state.contents.map(content => (\r\n              <div key={content.id}>\r\n                <div className='cardElement'></div>\r\n                <Card className='text-center'>\r\n                  <Card.Header>{content.User.username}</Card.Header>\r\n                  <Card.Body>\r\n                    <Card.Text>{content.contentComment}</Card.Text>\r\n                  </Card.Body>\r\n                </Card>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(DisplayComments);\r\n"]},"metadata":{},"sourceType":"module"}