{"ast":null,"code":"var _jsxFileName = \"C:\\\\Openclassroom\\\\P7_atanassov_julien\\\\frontend\\\\mon-app\\\\src\\\\components\\\\IsNotConnected.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport axios from 'axios'; // Création de l'instance axios\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: 'http://localhost:3002/api/users/me',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    common: {\n      Authorization: localStorage.getItem('token')\n    }\n  }\n});\n\nconst IsNotConnected = () => {\n  _s();\n\n  useEffect(() => {});\n  let [isNotAuth, setIsNotAuth] = useState('');\n  const params = new URLSearchParams();\n  params.append('userData', localStorage.getItem('userId'));\n\n  const getUser = async () => {\n    const data = await api.post('/', params).then(({\n      data\n    }) => data);\n    console.log(data);\n\n    if (data.id === 16) {\n      setIsNotAuth(true);\n    } else {\n      setIsNotAuth(false);\n    }\n  };\n\n  const isUserNotAuth = () => {\n    getUser();\n\n    if (isNotAuth === true) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isUserNotAuth() === true && /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 44\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 10\n  }, this);\n};\n\n_s(IsNotConnected, \"qRX37kzWV2yrwW27VxKSbwivJbk=\");\n\n_c = IsNotConnected;\nexport default IsNotConnected;\n\nvar _c;\n\n$RefreshReg$(_c, \"IsNotConnected\");","map":{"version":3,"sources":["C:/Openclassroom/P7_atanassov_julien/frontend/mon-app/src/components/IsNotConnected.js"],"names":["useEffect","useState","Redirect","axios","api","create","baseURL","headers","common","Authorization","localStorage","getItem","IsNotConnected","isNotAuth","setIsNotAuth","params","URLSearchParams","append","getUser","data","post","then","console","log","id","isUserNotAuth"],"mappings":";;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CACA;;;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,oCADc;AAEvBC,EAAAA,OAAO,EAAE;AACP,oBAAgB,mCADT;AAEPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADT;AAFD;AAFc,CAAb,CAAZ;;AAUA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAC3BZ,EAAAA,SAAS,CAAC,MAAM,CAAE,CAAT,CAAT;AAEA,MAAI,CAACa,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMc,MAAM,GAAG,IAAIC,eAAJ,EAAf;AACAD,EAAAA,MAAM,CAACE,MAAP,CAAc,UAAd,EAA0BP,YAAY,CAACC,OAAb,CAAqB,QAArB,CAA1B;;AAEA,QAAMO,OAAO,GAAG,YAAY;AAC1B,UAAMC,IAAI,GAAG,MAAMf,GAAG,CAACgB,IAAJ,CAAS,GAAT,EAAcL,MAAd,EAAsBM,IAAtB,CAA2B,CAAC;AAAEF,MAAAA;AAAF,KAAD,KAAcA,IAAzC,CAAnB;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;;AACA,QAAIA,IAAI,CAACK,EAAL,KAAY,EAAhB,EAAoB;AAClBV,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GARD;;AAUA,QAAMW,aAAa,GAAG,MAAM;AAC1BP,IAAAA,OAAO;;AACP,QAAIL,SAAS,KAAK,IAAlB,EAAwB;AACtB,aAAO,IAAP;AACD,KAFD,MAEO;AACL,aAAO,KAAP;AACD;AACF,GAPD;;AASA,sBAAO;AAAA,cAAMY,aAAa,OAAO,IAApB,iBAA4B,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA;AAAlC;AAAA;AAAA;AAAA;AAAA,UAAP;AACD,CA3BD;;GAAMb,c;;KAAAA,c;AA6BN,eAAeA,cAAf","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport axios from 'axios';\r\n// Création de l'instance axios\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3002/api/users/me',\r\n  headers: {\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n    common: {\r\n      Authorization: localStorage.getItem('token')\r\n    }\r\n  }\r\n});\r\n\r\nconst IsNotConnected = () => {\r\n  useEffect(() => {});\r\n\r\n  let [isNotAuth, setIsNotAuth] = useState('');\r\n  const params = new URLSearchParams();\r\n  params.append('userData', localStorage.getItem('userId'));\r\n\r\n  const getUser = async () => {\r\n    const data = await api.post('/', params).then(({ data }) => data);\r\n    console.log(data);\r\n    if (data.id === 16) {\r\n      setIsNotAuth(true);\r\n    } else {\r\n      setIsNotAuth(false);\r\n    }\r\n  };\r\n\r\n  const isUserNotAuth = () => {\r\n    getUser();\r\n    if (isNotAuth === true) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return <div>{isUserNotAuth() === true && <Redirect to='/' />}</div>;\r\n};\r\n\r\nexport default IsNotConnected;\r\n"]},"metadata":{},"sourceType":"module"}