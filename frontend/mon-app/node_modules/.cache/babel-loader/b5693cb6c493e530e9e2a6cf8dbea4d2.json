{"ast":null,"code":"var _jsxFileName = \"C:\\\\Openclassroom\\\\P7_atanassov_julien\\\\frontend\\\\mon-app\\\\src\\\\components\\\\CreateComment.js\";\nimport React, { useState } from 'react';\nimport { Component } from 'react';\nimport '../styles/style.css';\nimport { withRouter } from 'react-router';\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar qs = require('qs'); // Création de l'instance axios\n\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3002/api/comment/new/',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    common: {\n      Authorization: localStorage.getItem('token')\n    }\n  }\n});\n\nclass CreateComment extends Component {\n  constructor(...args) {\n    var _s = $RefreshSig$();\n\n    super(...args);\n    this.CreateComment = _s(() => {\n      _s();\n\n      const [contentLog, setContentLog] = useState('');\n      let userId = localStorage.getItem('userId');\n      const contentId = qs.parse(this.props.match.params, {\n        ignoreQueryPrefix: true\n      }).id;\n      let data = {\n        contentId: contentId,\n        contentComment: contentLog,\n        userId: userId\n      };\n\n      const CreateComment = e => {\n        api.post('/', data).then(alert('Commentaire ajouté !')).catch(error => {\n          console.log(error);\n        });\n      };\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          id: \"boxContent\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              controlId: \"formBasicContent\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Commentaires\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                type: \"text\",\n                onChange: e => {\n                  setContentLog(e.target.value);\n                },\n                placeholder: \"Contenu de votre article\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: CreateComment,\n              variant: \"primary\",\n              type: \"submit\",\n              children: \"Ajouter le commentaire\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }, this);\n    }, \"jwvs97dESwyOZ1d1UiT9iFXRB8M=\");\n  }\n\n}\n\nexport default _c = withRouter(CreateComment);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["C:/Openclassroom/P7_atanassov_julien/frontend/mon-app/src/components/CreateComment.js"],"names":["React","useState","Component","withRouter","Form","Button","Container","axios","qs","require","api","create","baseURL","headers","common","Authorization","localStorage","getItem","CreateComment","contentLog","setContentLog","userId","contentId","parse","props","match","params","ignoreQueryPrefix","id","data","contentComment","e","post","then","alert","catch","error","console","log","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,OAA1B;AACA,OAAO,qBAAP;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,IAAP,MAAiB,sBAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,OAAOC,SAAP,MAAsB,2BAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,IAAIC,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAhB,C,CACA;;;AACA,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AACvBC,EAAAA,OAAO,EAAE,wCADc;AAGvBC,EAAAA,OAAO,EAAE;AACP,oBAAgB,mCADT;AAEPC,IAAAA,MAAM,EAAE;AACNC,MAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB;AADT;AAFD;AAHc,CAAb,CAAZ;;AAUA,MAAMC,aAAN,SAA4BhB,SAA5B,CAAsC;AAAA;AAAA;;AAAA;AAAA,SAEpCgB,aAFoC,MAEpB,MAAM;AAAA;;AACpB,YAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BnB,QAAQ,CAAC,EAAD,CAA5C;AACA,UAAIoB,MAAM,GAAGL,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAb;AACA,YAAMK,SAAS,GAAGd,EAAE,CAACe,KAAH,CAAS,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAA1B,EAAkC;AAClDC,QAAAA,iBAAiB,EAAE;AAD+B,OAAlC,EAEfC,EAFH;AAGA,UAAIC,IAAI,GAAG;AACTP,QAAAA,SAAS,EAAEA,SADF;AAETQ,QAAAA,cAAc,EAAEX,UAFP;AAGTE,QAAAA,MAAM,EAAEA;AAHC,OAAX;;AAKA,YAAMH,aAAa,GAAGa,CAAC,IAAI;AACzBrB,QAAAA,GAAG,CACAsB,IADH,CACQ,GADR,EACaH,IADb,EAEGI,IAFH,CAEQC,KAAK,CAAC,sBAAD,CAFb,EAGGC,KAHH,CAGSC,KAAK,IAAI;AACdC,UAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,SALH;AAMD,OAPD;;AASA,0BACE;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,YAAd;AAAA,iCACE,QAAC,IAAD;AAAA,oCACE,QAAC,IAAD,CAAM,KAAN;AAAY,cAAA,SAAS,EAAC,MAAtB;AAA6B,cAAA,SAAS,EAAC,kBAAvC;AAAA,sCACE,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,IAAD,CAAM,OAAN;AACE,gBAAA,IAAI,EAAC,MADP;AAEE,gBAAA,QAAQ,EAAEL,CAAC,IAAI;AACbX,kBAAAA,aAAa,CAACW,CAAC,CAACQ,MAAF,CAASC,KAAV,CAAb;AACD,iBAJH;AAKE,gBAAA,WAAW,EAAC;AALd;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE,QAAC,MAAD;AAAQ,cAAA,OAAO,EAAEtB,aAAjB;AAAgC,cAAA,OAAO,EAAC,SAAxC;AAAkD,cAAA,IAAI,EAAC,QAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAsBD,KA5CmC;AAAA;;AAAA;;AA8CtC,oBAAef,UAAU,CAACe,aAAD,CAAzB","sourcesContent":["import React, { useState } from 'react';\r\nimport { Component } from 'react';\r\nimport '../styles/style.css';\r\nimport { withRouter } from 'react-router';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport axios from 'axios';\r\nvar qs = require('qs');\r\n// Création de l'instance axios\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3002/api/comment/new/',\r\n\r\n  headers: {\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n    common: {\r\n      Authorization: localStorage.getItem('token')\r\n    }\r\n  }\r\n});\r\nclass CreateComment extends Component {\r\n  // Fonction permettant de créer un commentaire\r\n  CreateComment = () => {\r\n    const [contentLog, setContentLog] = useState('');\r\n    let userId = localStorage.getItem('userId');\r\n    const contentId = qs.parse(this.props.match.params, {\r\n      ignoreQueryPrefix: true\r\n    }).id;\r\n    let data = {\r\n      contentId: contentId,\r\n      contentComment: contentLog,\r\n      userId: userId\r\n    };\r\n    const CreateComment = e => {\r\n      api\r\n        .post('/', data)\r\n        .then(alert('Commentaire ajouté !'))\r\n        .catch(error => {\r\n          console.log(error);\r\n        });\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Container id='boxContent'>\r\n          <Form>\r\n            <Form.Group className='mb-3' controlId='formBasicContent'>\r\n              <Form.Label>Commentaires</Form.Label>\r\n              <Form.Control\r\n                type='text'\r\n                onChange={e => {\r\n                  setContentLog(e.target.value);\r\n                }}\r\n                placeholder='Contenu de votre article'\r\n              />\r\n            </Form.Group>\r\n\r\n            <Button onClick={CreateComment} variant='primary' type='submit'>\r\n              Ajouter le commentaire\r\n            </Button>\r\n          </Form>\r\n        </Container>\r\n      </div>\r\n    );\r\n  };\r\n}\r\nexport default withRouter(CreateComment);\r\n"]},"metadata":{},"sourceType":"module"}