{"ast":null,"code":"var _jsxFileName = \"C:\\\\Openclassroom\\\\P7_atanassov_julien\\\\frontend\\\\mon-app\\\\src\\\\components\\\\AdminComments.js\";\n// Imports\nimport React, { Component } from 'react';\nimport '../styles/style.css';\nimport Card from 'react-bootstrap/Card';\nimport Button from 'react-bootstrap/Button';\nimport Container from 'react-bootstrap/Container';\nimport axios from 'axios'; // Création de l'instance axios\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst api = axios.create({\n  baseURL: 'http://localhost:3002/api/comment/',\n  headers: {\n    'Content-Type': 'application/x-www-form-urlencoded',\n    common: {\n      Authorization: localStorage.getItem('token')\n    }\n  }\n}); // Composant permettant l'affichage de tous les articles\n\nclass AdminComments extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      comments: []\n    };\n\n    this.getUserComments = async () => {\n      let data = await api.get('/all/').then(({\n        data\n      }) => data);\n      this.setState({\n        comments: data\n      });\n    };\n  }\n\n  componentWillMount() {\n    this.getUserComments();\n  } // Requête permettant de récupérer tous les commentaires des utilisateurs\n\n\n  // Requête permettant de supprimer le commentaire selectionné par l'admin\n  async deleteUserComment(commentId) {\n    const paramsId = new URLSearchParams();\n    paramsId.append('commentId', commentId);\n    await api.post('/me/delete', paramsId).catch();\n    this.getUserComments();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        id: \"boxContent\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"contentContainer\",\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Commentaires\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), this.state.comments.map(comment => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"cardElement\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Card, {\n              className: \"text-center\",\n              children: [/*#__PURE__*/_jsxDEV(Card.Body, {\n                children: [/*#__PURE__*/_jsxDEV(Card.Text, {\n                  children: comment.contentComment\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"buttonContainer\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    onClick: () => this.deleteUserComment(comment.id),\n                    children: \"Supprimer\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 57,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 56,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Card.Footer, {\n                className: \"text-muted\",\n                children: \"2 days ago\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 15\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AdminComments;","map":{"version":3,"sources":["C:/Openclassroom/P7_atanassov_julien/frontend/mon-app/src/components/AdminComments.js"],"names":["React","Component","Card","Button","Container","axios","api","create","baseURL","headers","common","Authorization","localStorage","getItem","AdminComments","constructor","props","state","comments","getUserComments","data","get","then","setState","componentWillMount","deleteUserComment","commentId","paramsId","URLSearchParams","append","post","catch","render","map","comment","contentComment","id"],"mappings":"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","sourcesContent":["// Imports\r\nimport React, { Component } from 'react';\r\nimport '../styles/style.css';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Container from 'react-bootstrap/Container';\r\nimport axios from 'axios';\r\n\r\n// Création de l'instance axios\r\nconst api = axios.create({\r\n  baseURL: 'http://localhost:3002/api/comment/',\r\n  headers: {\r\n    'Content-Type': 'application/x-www-form-urlencoded',\r\n    common: {\r\n      Authorization: localStorage.getItem('token')\r\n    }\r\n  }\r\n});\r\n\r\n// Composant permettant l'affichage de tous les articles\r\nclass AdminComments extends Component {\r\n  state = {\r\n    comments: []\r\n  };\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  componentWillMount() {\r\n    this.getUserComments();\r\n  }\r\n  // Requête permettant de récupérer tous les commentaires des utilisateurs\r\n  getUserComments = async () => {\r\n    let data = await api.get('/all/').then(({ data }) => data);\r\n    this.setState({ comments: data });\r\n  };\r\n\r\n  // Requête permettant de supprimer le commentaire selectionné par l'admin\r\n  async deleteUserComment(commentId) {\r\n    const paramsId = new URLSearchParams();\r\n    paramsId.append('commentId', commentId);\r\n    await api.post('/me/delete', paramsId).catch();\r\n    this.getUserComments();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Container id='boxContent'>\r\n          <div className='contentContainer'>\r\n            <h2>Commentaires</h2>\r\n            {this.state.comments.map(comment => (\r\n              <div key={comment.id}>\r\n                <div className='cardElement'></div>\r\n                <Card className='text-center'>\r\n                  <Card.Body>\r\n                    <Card.Text>{comment.contentComment}</Card.Text>\r\n                    <div className='buttonContainer'>\r\n                      <Button\r\n                        variant='primary'\r\n                        onClick={() => this.deleteUserComment(comment.id)}\r\n                      >\r\n                        Supprimer\r\n                      </Button>\r\n                    </div>\r\n                  </Card.Body>\r\n                  <Card.Footer className='text-muted'>2 days ago</Card.Footer>\r\n                </Card>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AdminComments;\r\n"]},"metadata":{},"sourceType":"module"}